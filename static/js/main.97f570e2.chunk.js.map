{"version":3,"sources":["dictionary.js","img/0.svg","img/1.svg","img/2.svg","img/3.svg","img/4.svg","img/5.svg","img/6.svg","img/7.svg","App.js","index.js"],"names":["dictionary","imageMap","zerothHanger","firstHanger","secondHanger","thirdHanger","fourthHanger","fifthHanger","sixthHanger","seventhHanger","Title","Typography","Option","Select","alphabets","toUpperCase","split","keys_per_row","keys_before","ProgressBar","props","style","display","justifyContent","marginTop","width","level","wrongGuesses","strokeColor","trailColor","percent","Math","round","showInfo","InputLetter","guesses","has","letter","className","DisplayWord","word","DisplayLetter","lettersJSX","i","length","push","App","document","title","useState","setWrongGuesses","setWord","category","setCategory","Set","setGuesses","categories","key","categoriesJSX","value","reset","floor","random","handleLetterGuess","new_guesses","add","includes","Modal","error","content","okText","onOk","won","charAt","success","onChange","size","defaultValue","useEffect","backgroundColor","src","alt","fontSize","keysJSX","keyboardJSX","j","onClick","map","index","paddingLeft","paddingRight","generateKeyboard","ReactDOM","render","StrictMode","getElementById"],"mappings":"yNAqKeA,G,cArKE,CACf,QAAW,CACT,YACA,WACA,WACA,WACA,WACA,OACA,SACA,SACA,YACA,QACA,UACA,WACA,QACA,YACA,YACA,aACA,YACA,cACA,YACA,MACA,eACA,SACA,WACA,aACA,WACA,MACA,OACA,UACA,UACA,UACA,QACA,QACA,SACA,SACA,WACA,QACA,UACA,OACA,SACA,UACA,UACA,SACA,UACA,kBACA,YACA,UACA,QACA,QACA,WACA,UACA,UACA,cACA,aACA,WACA,OACA,QACA,QACA,QACA,SACA,QACA,YACA,WACA,QACA,WACA,UACA,aACA,OACA,SAEF,QAAU,CACN,YACA,eACA,OACA,SACA,eACA,UACA,SACA,gBACA,UACA,OACA,WACA,YACA,UACA,gBACA,UACA,UACA,OACA,QACA,cACA,iBACA,UACA,SACA,aACA,YACA,aACA,OACA,QACA,SACA,SACA,WACA,UACA,aACA,YACA,qBACA,UACA,cACA,aACA,cACA,aACA,MACA,aACA,OACA,cACA,YACA,OACA,SACA,UACA,gBACA,cACA,iBACA,eACA,aACA,UACA,aACA,WACA,SACA,cACA,UACA,WACA,cACA,eACA,WACA,aACA,QACA,mBACA,UACA,UACA,oBACA,YACA,WACA,SACA,QACA,UACA,YACA,aACA,YACA,cACA,YACA,SACA,cACA,SACA,WACA,aACA,cACA,SACA,mBACA,cACA,UACA,QACA,a,6CCjKS,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8B,QCkBnCC,EAAW,CACfC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAIMC,EAAUC,IAAVD,MACAE,EAAWC,IAAXD,OAIFE,EAAY,6BAA6BC,cAAcC,MAAM,IAC7DC,EAAe,CAAC,GAAI,EAAG,GACvBC,EAAc,CAAC,EAAG,GAAI,IA8M5B,SAASC,EAAYC,GACnB,OACE,qBACEC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,UAA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","file":"static/js/main.97f570e2.chunk.js","sourcesContent":["var dictionary = {\n  \"animals\": [\n    \"Alligator\",\n    \"Anaconda\",\n    \"Anteater\",\n    \"Antelope\",\n    \"Babirusa\",\n    \"Bear\",\n    \"Beaver\",\n    \"Beetle\",\n    \"Birdeater\",\n    \"Bison\",\n    \"Buffalo\",\n    \"Bullfrog\",\n    \"Camel\",\n    \"Cassowary\",\n    \"Centipede\",\n    \"Chimpanzee\",\n    \"Cockroach\",\n    \"Constrictor\",\n    \"Crocodile\",\n    \"Dog\",\n    \"Domesticated\",\n    \"Dragon\",\n    \"Elephant\",\n    \"Endangered\",\n    \"Flamingo\",\n    \"Fox\",\n    \"Frog\",\n    \"Gazelle\",\n    \"Giraffe\",\n    \"Gorilla\",\n    \"Hippo\",\n    \"Hyena\",\n    \"Iguana\",\n    \"Insect\",\n    \"Kangaroo\",\n    \"Lemur\",\n    \"Leopard\",\n    \"Lion\",\n    \"Lizard\",\n    \"Macaque\",\n    \"Monitor\",\n    \"Monkey\",\n    \"Monster\",\n    \"Near threatened\",\n    \"Orangutan\",\n    \"Ostrich\",\n    \"Otter\",\n    \"Panda\",\n    \"Pangolin\",\n    \"Peafowl\",\n    \"Penguin\",\n    \"Rattlesnake\",\n    \"Rhinoceros\",\n    \"Scorpion\",\n    \"Seal\",\n    \"Sheep\",\n    \"Snail\",\n    \"Snake\",\n    \"Spider\",\n    \"Tapir\",\n    \"Tarantula\",\n    \"Terrapin\",\n    \"Tiger\",\n    \"Tortoise\",\n    \"Warthog\",\n    \"Wildebeest\",\n    \"Wolf\",\n    \"Zebra\"\n  ],\n  \"science\":[\n      \"astronomy\",\n      \"astrophysics\",\n      \"atom\",\n      \"beaker\",\n      \"biochemistry\",\n      \"biology\",\n      \"botany\",\n      \"Bunsen burner\",\n      \"burette\",\n      \"cell\",\n      \"chemical\",\n      \"chemistry\",\n      \"climate\",\n      \"climatologist\",\n      \"control\",\n      \"cuvette\",\n      \"data\",\n      \"datum\",\n      \"electricity\",\n      \"electrochemist\",\n      \"element\",\n      \"energy\",\n      \"entomology\",\n      \"evolution\",\n      \"experiment\",\n      \"fact\",\n      \"flask\",\n      \"fossil\",\n      \"funnel\",\n      \"genetics\",\n      \"geology\",\n      \"geophysics\",\n      \"glassware\",\n      \"graduated cylinder\",\n      \"gravity\",\n      \"herpetology\",\n      \"hypothesis\",\n      \"ichthyology\",\n      \"immunology\",\n      \"lab\",\n      \"laboratory\",\n      \"laws\",\n      \"lepidoptery\",\n      \"magnetism\",\n      \"mass\",\n      \"matter\",\n      \"measure\",\n      \"meteorologist\",\n      \"meteorology\",\n      \"microbiologist\",\n      \"microbiology\",\n      \"microscope\",\n      \"mineral\",\n      \"mineralogy\",\n      \"molecule\",\n      \"motion\",\n      \"observatory\",\n      \"observe\",\n      \"organism\",\n      \"ornithology\",\n      \"paleontology\",\n      \"particle\",\n      \"Petri dish\",\n      \"phase\",\n      \"physical science\",\n      \"physics\",\n      \"pipette\",\n      \"quantum mechanics\",\n      \"radiology\",\n      \"research\",\n      \"retort\",\n      \"scale\",\n      \"science\",\n      \"scientist\",\n      \"seismology\",\n      \"telescope\",\n      \"temperature\",\n      \"test tube\",\n      \"theory\",\n      \"thermometer\",\n      \"tissue\",\n      \"variable\",\n      \"virologist\",\n      \"volcanology\",\n      \"volume\",\n      \"volumetric flask\",\n      \"watch glass\",\n      \"weather\",\n      \"weigh\",\n      \"zoology\"\n  ]\n}\n\nexport default dictionary;","export default __webpack_public_path__ + \"static/media/0.a98e8366.svg\";","export default __webpack_public_path__ + \"static/media/1.c79cdb29.svg\";","export default __webpack_public_path__ + \"static/media/2.5a3cf98c.svg\";","export default __webpack_public_path__ + \"static/media/3.35e7403c.svg\";","export default __webpack_public_path__ + \"static/media/4.46372f71.svg\";","export default __webpack_public_path__ + \"static/media/5.aa2f2aea.svg\";","export default __webpack_public_path__ + \"static/media/6.52186987.svg\";","export default __webpack_public_path__ + \"static/media/7.78b09b38.svg\";","import \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\nimport \"./App.css\";\nimport dictionary from \"./dictionary.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, Divider, Modal, Progress, Select } from \"antd\";\n\n// Image Imports\nimport {\n  zerothHanger,\n  firstHanger,\n  secondHanger,\n  thirdHanger,\n  fourthHanger,\n  fifthHanger,\n  sixthHanger,\n  seventhHanger,\n} from \"./img/index\";\n\nconst imageMap = [\n  zerothHanger,\n  firstHanger,\n  secondHanger,\n  thirdHanger,\n  fourthHanger,\n  fifthHanger,\n  sixthHanger,\n  seventhHanger,\n];\n\n// Ant Design Imports\nconst { Title } = Typography;\nconst { Option } = Select;\n\n// Universal Constants\nconst num_lives = 7;\nconst alphabets = \"qwertyuiopasdfghjklzxcvbnm\".toUpperCase().split(\"\");\nconst keys_per_row = [10, 9, 7];\nconst keys_before = [0, 10, 19];\n\n// Main APP Component\nfunction App() {\n  // Our Hangman Game\n  /* ========================================== SET UP STATE AND CONST ========================================== */\n  document.title = \"Hanger Man\";\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [word, setWord] = useState(\"FRAMERATE\");\n  const [category, setCategory] = useState(\"animals\");\n  const [guesses, setGuesses] = useState(new Set());\n\n  // Set up catetgories\n  const categories = [];\n  for (let key in dictionary) {\n    categories.push(key);\n  }\n  var categoriesJSX = [];\n  for (let i = 0; i < categories.length; i++) {\n    categoriesJSX.push(\n      <Option key={categories[i]} value={categories[i]}>\n        {categories[i]}{\" \"}\n      </Option>\n    );\n  }\n  categoriesJSX = [\n    <Select\n      style={{ width: 120 }}\n      onChange={handleCategoryChange}\n      size=\"large\"\n      defaultValue=\"animals\"\n    >\n      {categoriesJSX}\n    </Select>,\n  ];\n\n  /* ========================================== FUNCTIONS ========================================== */\n  function handleCategoryChange(value) {\n    reset(value);\n  }\n\n  // Reset Function\n  function reset(category) {\n    setWrongGuesses(0);\n    setGuesses(new Set());\n    setWord(\n      dictionary[category][\n        Math.floor(Math.random() * dictionary[category].length)\n      ].toUpperCase()\n    );\n    setCategory(category);\n  }\n\n  // Generating Keyboard\n  function generateKeyboard() {\n    // console.log(\"Generating Keyboard\");\n    var keysJSX = [[], [], []];\n    var keyboardJSX = [];\n    for (let j = 0; j < 3; j++) {\n      for (let i = keys_before[j]; i < keys_before[j] + keys_per_row[j]; i++) {\n        keysJSX[j].push(\n          <li\n            onClick={() => handleLetterGuess(alphabets[i])}\n            className=\"inputLetterContainer\"\n            key={alphabets[i]}\n          >\n            <InputLetter\n              letter={alphabets[i]}\n              guesses={guesses}\n              key={alphabets[i]}\n            />\n          </li>\n        );\n      }\n    }\n\n    keyboardJSX.push(\n      <ul className=\"keyboardRow\" key=\"firstrow\">\n        {keysJSX[0].map((key, index) => (\n          <div key={index}>{key}</div>\n        ))}\n      </ul>\n    );\n    keyboardJSX.push(\n      <ul\n        className=\"keyboardRow\"\n        style={{ paddingLeft: \"5em\", paddingRight: \"10em\" }}\n        key=\"secondrow\"\n      >\n        {keysJSX[1].map((key, index) => (\n          <div key={index}>{key}</div>\n        ))}\n      </ul>\n    );\n    keyboardJSX.push(\n      <ul\n        className=\"keyboardRow\"\n        style={{ paddingLeft: \"10em\", paddingRight: \"30em\" }}\n        key=\"thirdrow\"\n      >\n        {keysJSX[2].map((key, index) => (\n          <div key={index}>{key}</div>\n        ))}\n      </ul>\n    );\n\n    keyboardJSX = [\n      <div>\n        {keyboardJSX}\n      </div>,\n    ];\n    return keyboardJSX;\n  }\n\n  // Handle a letter guess\n  function handleLetterGuess(letter) {\n    // console.log(word);\n    // console.log(\"Guessed: \" + letter);\n    if (guesses.has(letter)) {\n      return;\n    }\n    let new_guesses = new Set(guesses);\n    new_guesses.add(letter);\n    setGuesses(new_guesses);\n\n    if (!word.includes(letter)) {\n      if (wrongGuesses + 1 === 7) {\n        // plus 1 to account for slow setting state\n        FailureModal();\n      }\n      setWrongGuesses(wrongGuesses + 1);\n    }\n\n    let won = true;\n    for (let i = 0; i < word.length; i++) {\n      if (\n        !(guesses.has(word.charAt(i)) || word[i] === \" \" || letter === word[i])\n      ) {\n        won = false;\n        break;\n      }\n    }\n    if (won) {\n      SuccessModal();\n    }\n  }\n\n  /*========================================== END GAME MODALS ==========================================*/\n  // Success Modal\n  function SuccessModal() {\n    Modal.success({\n      title: \"Congratulations! You've Won!\",\n      content: \"You've guessed the word with less than 7 errors!\",\n      okText: \"Play Again\",\n      onOk: () => {\n        reset(category);\n      },\n    });\n  }\n  // Failure Modal\n  function FailureModal() {\n    Modal.error({\n      title: \"You've Lost!\",\n      content:\n        \"It's alright! Try again! The correct answer was: '\" + word + \"'\",\n      okText: \"Play Again\",\n      onOk: () => {\n        reset(category);\n      },\n    });\n  }\n\n  /* ========================================== Run Set-Up Code Once on Load ==========================================*/\n  useEffect(() => {\n    reset(category);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /* ========================================== RENDER ========================================== */\n  return (\n    <div style={{ backgroundColor: \"#fff1f0\"}}>\n      <div className=\"hangerManGame\">\n        <br />\n        <Title>Hanger Man</Title>\n        <Divider />\n        <DisplayWord word={word} guesses={guesses} />\n\n        <Title level={2}>Category: {categoriesJSX}</Title>\n        <div className=\"hangermanImageContainer\">\n          <img\n            src={imageMap[wrongGuesses]}\n            alt=\"Hanger\"\n            className=\"hangermanImg\"\n          />\n\n          <ProgressBar wrongGuesses={wrongGuesses} />\n          <Divider style={{ fontSize: \"2em\" }}> Guess Letters </Divider>\n          <div style={{ width: \"100%\" }}>{generateKeyboard()}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/* ========================================== COMPONENTS ========================================== */\n// Progress Bar\nfunction ProgressBar(props) {\n  return (\n    <div\n      style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"1.5em\" }}\n    >\n      <div style={{ width: \"70%\" }}>\n        <div>\n          <Title level={3}>\n            {\" \"}\n            Spare Lives: {num_lives - props.wrongGuesses - 1}{\" \"}\n          </Title>\n        </div>\n        <Progress\n          strokeColor={{\n            \"0%\": \"#ff4d4f\",\n            \"100%\": \"#f5222d\",\n          }}\n          trailColor=\"#d9d9d9\"\n          percent={Math.round(\n            100 - (props.wrongGuesses / (num_lives - 1)) * 100\n          )}\n          showInfo={false}\n        />\n      </div>\n    </div>\n  );\n}\n\n// Input Letter Component\nfunction InputLetter(props) {\n  if (!props.guesses.has(props.letter)) {\n    return (\n      <div key={props.guesses} className=\"inputLetter\">\n        {props.letter}\n      </div>\n    );\n  } else {\n    return (\n      <div key={props.guesses} className=\"disabledLetter\">\n        {props.letter}\n      </div>\n    );\n  }\n}\n\n// Display Word Component\nfunction DisplayWord(props) {\n  let word = props.word;\n  let guesses = props.guesses;\n\n  // Display Letter Component\n  function DisplayLetter(props) {\n    return <div className=\"displayLetter\">{props.letter}</div>;\n  }\n\n  let lettersJSX = [];\n  for (let i = 0; i < word.length; i++) {\n    let letter = word[i];\n    if (!guesses.has(letter) && letter !== \" \") {\n      letter = \" _ \";\n    }\n    lettersJSX.push(<DisplayLetter key={i} letter={letter} />);\n  }\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      {lettersJSX}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}